{"ast":null,"code":"var _jsxFileName = \"/home/developer/turingarena/frontend/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questionCount, setQuestionCount] = useState(0);\n  const [sessionId, setSessionId] = useState(Math.random().toString(36).substring(2, 15));\n  socket.on('message', msg => {\n    setMessages(prevMessages => [...prevMessages, msg]);\n  });\n  const sendMessage = () => {\n    if (input.trim() && questionCount < 5) {\n      socket.emit('message', input);\n      setMessages(prevMessages => [...prevMessages, {\n        user: 'You',\n        text: input\n      }]);\n      setInput('');\n      setQuestionCount(questionCount + 1);\n    }\n  };\n  const submitVote = isHuman => {\n    fetch('http://localhost:5000/submit-vote', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        session_id: sessionId,\n        is_human: isHuman\n      })\n    }).then(response => response.json()).then(data => {\n      alert(data.message);\n    });\n  };\n  const showLeaderboard = () => {\n    fetch('http://localhost:5000/leaderboard').then(response => response.json()).then(data => {\n      alert(JSON.stringify(data.leaderboard));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      disabled: questionCount >= 5,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => submitVote(true),\n        children: \"Vote Human\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => submitVote(false),\n        children: \"Vote AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showLeaderboard,\n        children: \"Show Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"QwR6srncEkE5jlmlku1w3yohAXA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","io","jsxDEV","_jsxDEV","socket","Chat","_s","messages","setMessages","input","setInput","questionCount","setQuestionCount","sessionId","setSessionId","Math","random","toString","substring","on","msg","prevMessages","sendMessage","trim","emit","user","text","submitVote","isHuman","fetch","method","headers","body","JSON","stringify","session_id","is_human","then","response","json","data","alert","message","showLeaderboard","leaderboard","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/developer/turingarena/frontend/src/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:5000');\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [questionCount, setQuestionCount] = useState(0);\n  const [sessionId, setSessionId] = useState(Math.random().toString(36).substring(2, 15));\n\n  socket.on('message', (msg) => {\n    setMessages((prevMessages) => [...prevMessages, msg]);\n  });\n\n  const sendMessage = () => {\n    if (input.trim() && questionCount < 5) {\n      socket.emit('message', input);\n      setMessages((prevMessages) => [...prevMessages, { user: 'You', text: input }]);\n      setInput('');\n      setQuestionCount(questionCount + 1);\n    }\n  };\n\n  const submitVote = (isHuman) => {\n    fetch('http://localhost:5000/submit-vote', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ session_id: sessionId, is_human: isHuman })\n    }).then(response => response.json())\n      .then(data => {\n        alert(data.message);\n      });\n  };\n\n  const showLeaderboard = () => {\n    fetch('http://localhost:5000/leaderboard')\n      .then(response => response.json())\n      .then(data => {\n        alert(JSON.stringify(data.leaderboard));\n      });\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className=\"message\">\n            <strong>{msg.user}: </strong> {msg.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Type your message...\"\n      />\n      <button onClick={sendMessage} disabled={questionCount >= 5}>Send</button>\n      <div>\n        <button onClick={() => submitVote(true)}>Vote Human</button>\n        <button onClick={() => submitVote(false)}>Vote AI</button>\n        <button onClick={showLeaderboard}>Show Leaderboard</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}